<?php $this->cache['en']['auth_db'] = array (
  'auth_dbcantconnect' => 'Could not connect to the specified authentication database...',
  'auth_dbdebugauthdb' => 'Debug ADOdb',
  'auth_dbdebugauthdbhelp' => 'Debug ADOdb connection to external database - use when getting empty page during login. Not suitable for production sites.',
  'auth_dbdeleteuser' => 'Deleted user {$a->name} id {$a->id}',
  'auth_dbdeleteusererror' => 'Error deleting user {$a}',
  'auth_dbdescription' => 'This method uses an external database table to check whether a given username and password is valid.  If the account is a new one, then information from other fields may also be copied across into Moodle.',
  'auth_dbextencoding' => 'External db encoding',
  'auth_dbextencodinghelp' => 'Encoding used in external database',
  'auth_dbextrafields' => 'These fields are optional.  You can choose to pre-fill some Moodle user fields with information from the <b>external database fields</b> that you specify here. <p>If you leave these blank, then defaults will be used.</p><p>In either case, the user will be able to edit all of these fields after they log in.</p>',
  'auth_dbfieldpass' => 'Name of the field containing passwords',
  'auth_dbfieldpass_key' => 'Password field',
  'auth_dbfielduser' => 'Name of the field containing usernames',
  'auth_dbfielduser_key' => 'Username field',
  'auth_dbhost' => 'The computer hosting the database server.',
  'auth_dbhost_key' => 'Host',
  'auth_dbchangepasswordurl_key' => 'Password-change URL',
  'auth_dbinsertuser' => 'Inserted user {$a->name} id {$a->id}',
  'auth_dbinsertusererror' => 'Error inserting user {$a}',
  'auth_dbname' => 'Name of the database itself',
  'auth_dbname_key' => 'DB name',
  'auth_dbpass' => 'Password matching the above username',
  'auth_dbpass_key' => 'Password',
  'auth_dbpasstype' => '<p>Specify the format that the password field is using. MD5 hashing is useful for connecting to other common web applications like PostNuke.</p> <p>Use \'internal\' if you want to the external DB to manage usernames &amp; email addresses, but Moodle to manage passwords. If you use \'internal\', you <i>must</i> provide a populated email address field in the external DB, and you must execute both admin/cron.php and auth/db/cli/sync_users.php regularly. Moodle will send an email to new users with a temporary password.</p>',
  'auth_dbpasstype_key' => 'Password format',
  'auth_dbreviveduser' => 'Revived user {$a->name} id {$a->id}',
  'auth_dbrevivedusererror' => 'Error reviving user {$a}',
  'auth_dbsetupsql' => 'SQL setup command',
  'auth_dbsetupsqlhelp' => 'SQL command for special database setup, often used to setup communication encoding - example for MySQL and PostgreSQL: <em>SET NAMES \'utf8\'</em>',
  'auth_dbsuspenduser' => 'Suspended user {$a->name} id {$a->id}',
  'auth_dbsuspendusererror' => 'Error suspending user {$a}',
  'auth_dbsybasequoting' => 'Use sybase quotes',
  'auth_dbsybasequotinghelp' => 'Sybase style single quote escaping - needed for Oracle, MS SQL and some other databases. Do not use for MySQL!',
  'auth_dbtable' => 'Name of the table in the database',
  'auth_dbtable_key' => 'Table',
  'auth_dbtype' => 'The database type (See the <a href="../lib/adodb/readme.htm#drivers">ADOdb documentation</a> for details)',
  'auth_dbtype_key' => 'Database',
  'auth_dbupdatinguser' => 'Updating user {$a->name} id {$a->id}',
  'auth_dbuser' => 'Username with read access to the database',
  'auth_dbuser_key' => 'DB user',
  'auth_dbusernotexist' => 'Cannot update non-existent user: {$a}',
  'auth_dbuserstoadd' => 'User entries to add: {$a}',
  'auth_dbuserstoremove' => 'User entries to remove: {$a}',
  'pluginname' => 'External database',
);